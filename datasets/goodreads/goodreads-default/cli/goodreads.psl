// targeted is a block that determines whether we observed or will be evaluating the users predicted 
// preference for the item

// preference is the latent variable representing the users preference of the item
// we are going to be using preference for the final ranking, which will be evaluated using

// Latent Factor collaborative filtering local predictor 
// This will capture the idea that users and items that 
// have been rated “similarly” will continue to be rated “similarly”. 
1.0 : targeted(U,I) & NMF_Rating(U,I) >> rating(U,I)^2

// Propagation of ratings across item content similarity, this is 
// calculated by creating tf-idf vectors from the bookshelf names user
// provide and then calculating the cosine similarity between the vectors
1.0 : targeted(U,I1) & targeted(U,I2) & rating(U,I1) & item_content_similarity_cosine(U, I1, I2) >> rating(U,I2)^2

// Average user preferences over authors and genres.
// Note: preprocess so continuously observed predicates are standardized so mean is 0.5 and
// 0 and 1 are 2 std deviations away from mean for each user.
// Then every persons ratings and reviews are in the same units and can be propagated.

// Prior on Book rating from average rating
1.0 : targeted(U,I) & book_average_rating(I) >> rating(U,I)^2

// structure among users and items (structured input)
1.0 : targeted(U,I1) & targeted(U,I2) & rating(U,I1) & authored(I1, A) & authored(I2, A) >> rating(U,I2)^2
1.0 : targeted(U,I1) & targeted(U,I2) & rating(U,I1) & series(I1, S) & series(I2, S) >> rating(U,I2)^2
1.0 : targeted(U,I1) & targeted(U,I2) & rating(U,I1) & genre(I1, G) & genre(I2, G) >> rating(U,I2)^2
1.0 : targeted(U,I1) & targeted(U,I2) & rating(U,I1) & publisher(I1, P) & publisher(I2, P) >> rating(U,I2)^2