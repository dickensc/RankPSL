// Similarities like Pearson, Cosine, and Adjusted Cosine Similarity between items.
1.0 : rated(U,I1) & rated(U,I2) & rating(U,I1) & sim_cosine_items(I1,I2) >> rating(U,I2)^2

// Similarities like Pearson and Cosine Similarity between users.
1.0 : rated(U1,I) & rated(U2,I) & rating(U1,I) & sim_cosine_users(U1,U2) >> rating(U2,I)^2

// Predictions by different other methods like SGD, Item based Pearson methods, and BPMF methods.

// Average prior of user rating and item ratings.
1.0 : user(U) & item(I) & rated(U,I) & avg_user_rating(U) >> rating(U,I)^2
1.0 : user(U) & item(I) & rated(U,I) & rating(U,I) >> avg_user_rating(U)^2
1.0 : user(U) & item(I) & rated(U,I) & avg_item_rating(I) >> rating(U,I)^2
1.0 : user(U) & item(I) & rated(U,I) & rating(U,I) >> avg_item_rating(I)^2

// Content rule by Jaccard similarity.
1.0 : rated(U,I1) & rated(U,I2) & rating(U,I1) & sim_content_items_jaccard(I1,I2) >> rating(U,I2)^2

// Preference Rules
item_cluster_preference(U1, IC1, IC2) + item_cluster_preference(U1, IC2, IC1) = 1.
1.0 : item_cluster_preference(U1, IC1, IC2) & sim_cosine_users(U1, U2) -> item_cluster_preference(U2, IC1, IC2) ^2
1.0 : item_cluster_preference(U, IC1, IC2) & sim_cosine_item_clusters(IC2, IC3) -> item_cluster_preference(U, IC1, IC3) ^2
1.0 : item_cluster_preference(U, IC1, IC2) & item_cluster_preference(U, IC2, IC3) -> item_cluster_preference(U, IC1, IC3) ^2

// Point to Pairwise relation rules.  only one direction so pref can be soft. this direction so rating at least reflects preference
item_cluster_preference(U, IC1, +IC2) / |IC2| = item_cluster_rank(U, IC1).
1.0 : item_cluster(I, IC) & rated(U,I) & item_cluster_rank(U, IC) >> rating(U, I) ^2